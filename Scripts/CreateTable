create_table(){
while true; do
        echo "Enter Your New Table Name: "
        read tbn
        test_tbn=$(check_name "$tbn")
        if [ $test_tbn -eq "1" ]; then
               echo -ne "$(RedB 'Naming Error please Enter only English Alphapet')\n"; continue
        elif [ -f "$tbn.db" ]; then
                echo -ne "$(RedB 'Table Already Exists')\n"; continue
        else
                touch "$tbn.db" "$tbn.meta"
                printf "n\nn" > "$tbn.meta"
                break
        fi
done

create_columns=()
while true; do
        echo "Enter The Number of Columns"
        read columns_number
        test_columns_number=$(only_numbers "$columns_number")
        if [ $test_columns_number -eq "0" ] && [ "$columns_number" -gt "0" ]; then
                for i in $(seq 1 $columns_number);
                do
##
while true; do
        echo "Enter $i Column Name"
        read col_name
        test_col_name=$(check_name "$col_name")
        # check column duplication
        result_inarray_create_columns=$(in_array "$col_name" "${create_columns[@]}")
        if [ $test_col_name -eq "1" ]; then
               echo -ne "$(RedB 'Naming Error please Enter only English Alphapet')\n"; continue
        elif [ "$result_inarray_create_columns" -eq "1" ]; then
                        create_columns+=("$col_name")
                        break
        else
                echo -ne "$(RedB 'Wrong Input Please Try again, Did you enter same name again')\n"
                continue
        fi
done
##
while true; do
echo "Enter $i Column Type"
echo -ne "
$(Red '1) Integer') 
$(Red '2) String') 
"
read col_type
test_columns_tybe=$(only_numbers "$col_type")
if [ $test_columns_number -eq "1" ]; then
        continue
fi
if [ $col_type -ne "1" ] && [ $col_type -ne "2" ]; then
        echo -ne "$(RedB 'Choose correct option')\n"
        continue
fi
break
done
##
while true; do
echo "Do you want this column as a primary key"
echo -ne "
$(Red '1) No')
$(Red '2) Yes')
"
read col_pk
test_col_pk=$(only_numbers "$col_pk")
if [ $test_col_pk -eq "1" ]; then
        echo -ne "$(RedB 'Choose correct option')\n" 
        continue
fi
if [ $col_pk -ne "1" ] && [ $col_pk -ne "2" ]; then
        echo -ne "$(RedB 'Choose correct option')\n"
        continue
fi
if [ $col_pk -eq "2" ]; then
        col_type=$(( $col_type + 2 ))
fi
break
done
##

#sed -i "${i}s/$/:$col_name/" $tbn.meta
sed -i "1s/$/:$col_name/" $tbn.meta
#sed -i "$((i + 1))s/$/:$col_type/" $tbn.meta
sed -i "2s/$/:$col_type/" $tbn.meta

done
sed -i 's/^n://' $tbn.meta
break
else
echo -ne "$(RedB 'Error Enter a positive number')\n" 
continue
fi
done

# cleanig
unset create_columns
}

create_table